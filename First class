tSure, let's ensure the PHP scripts and HTML forms are set up correctly, taking extra care to address common issues. 

### Step 1: Database Setup

Ensure you have created the database and table correctly in phpMyAdmin:

```sql
CREATE DATABASE loyal;

USE loyal;

CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);
```

### Step 2: PHP Configuration File

Create a `config.php` file for database configuration:

```php
<?php
$servername = "localhost";
$username = "root";
$password = "your_password";
$dbname = "loyal";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>
```

### Step 3: User Registration Script

Create `register.php`:

```php
<?php
session_start();
include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $password);

    if ($stmt->execute()) {
        echo "




















Sure, let's ensure the entire process from registration to login and logout is correctly implemented, including session management.

### Step 1: Database Setup

Ensure you have created the database and table correctly in phpMyAdmin:

```sql
CREATE DATABASE loyal;

USE loyal;

CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);
```

### Step 2: PHP Configuration File

Create a `config.php` file for database configuration:

```php
<?php
$servername = "localhost";
$username = "root";
$password = "your_password";
$dbname = "loyal";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}
?>
```

### Step 3: User Registration Script

Create `register.php`:

```php
<?php
session_start();
include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $username = $_POST['username'];
    $email = $_POST['email'];
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);

    $sql = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("sss", $username, $email, $password);

    if ($stmt->execute()) {
        header("Location: login.html");
    } else {
        echo "Error: " . $sql . "<br>" . $conn->error;
    }

    $stmt->close();
    $conn->close();
}
?>
```

### Step 4: User Login Script

Create `login.php`:

```php
<?php
session_start();
include 'config.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $email = $_POST['email'];
    $password = $_POST['password'];

    $sql = "SELECT user_id, username, password FROM users WHERE email = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $email);
    $stmt->execute();
    $stmt->store_result();

    if ($stmt->num_rows > 0) {
        $stmt->bind_result($user_id, $username, $hashed_password);
        $stmt->fetch();

        if (password_verify($password, $hashed_password)) {
            $_SESSION['loyal_user_id'] = $user_id;
            $_SESSION['loyal_username'] = $username;
            header("Location: home.php");
        } else {
            echo "Invalid password.";
        }
    } else {
        echo "No user found with this email.";
    }

    $stmt->close();
    $conn->close();
}
?>
```

### Step 5: User Logout Script

Create `logout.php`:

```php
<?php
session_start();
session_unset();
session_destroy();
header("Location: login.html");
exit();
?>
```

### Step 6: Home Page Script

Create `home.php`:

```php
<?php
session_start();

if (!isset($_SESSION['loyal_user_id'])) {
    header("Location: login.html");
    exit();
}

echo "Welcome, " . $_SESSION['loyal_username'] . "!";
?>

<a href="logout.php">Logout</a>
```

### Step 7: HTML Forms

#### Registration Form (`register.html`):

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up</title>
</head>
<body>
    <form action="register.php" method="POST">
        <h1>Create Account</h1>
        <input type="text" name="username" placeholder="Username" required>
        <input type="email" name="email" placeholder="Email" required>
        <input type="password" name="password" placeholder="Password" required>
        <button type="submit">Sign Up</button>
    </form>
    <p>Already have an account? <a href="login.html">Login</a></p>
</body>
</html>
```

#### Login Form (`login.html`):

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible"="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
</head>
<body>
    <form action="login.php" method="POST">
        <h1>Login</h1>
        <input type="email" name="email" placeholder="Email" required>
        <input type="password" name="password" placeholder="Password" required>
        <button type="submit">Login</button>
    </form>
    <p>Don't have an account? <a href="register.html">Sign Up</a></p>
</body>
</html>
```

### Step 8: HTML & CSS Integration

To integrate your HTML and CSS from the initial form design with the backend, update the action attributes in the forms to point to `register.php` and `login.php`.

In `register.html` and `login.html`, add the CSS file reference if you want to maintain the same styling:

```html
<link rel="stylesheet" href="style.css">
```

### Testing

- Ensure your database server (MySQL) and web server (Apache or Nginx) are running.
- Open `register.html` in a browser, fill out the form, and submit it to create a new account.
- After registration, you should be redirected to `login.html`.
- Log in with the registered credentials. Upon successful login, you should be redirected to `home.php`.
- On the `home.php` page, ensure that the username is displayed and that the logout link works properly.

This setup provides a comprehensive solution for user registration, login, session management, and logout functionality using PHP and MySQL.
